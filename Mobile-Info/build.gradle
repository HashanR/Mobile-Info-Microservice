plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "com.palantir.docker" version "0.25.0"
}

group = 'com.hashanr.mobileinfo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	mavenLocal()
}

dependencies {
	
	//compile("org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE") { force = true }
	
	
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

	// https://mvnrepository.com/artifact/org.springframework.plugin/spring-plugin-core
	//compile group: 'org.springframework.plugin', name: 'spring-plugin-core', version: '2.0.0.RELEASE'
	
	
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-oauth2
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-oauth2', version: '2.2.1.RELEASE'
	
	
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-security
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-security', version: '2.2.1.RELEASE'
	
	
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-config-client
	compile group: 'org.springframework.cloud', name: 'spring-cloud-config-client', version: '2.2.2.RELEASE'
	//Import commons domain dependency
	compile group: 'com.hashanr.microservices', name: 'Mobile-Info-Commons' , version: '2.0'
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.20'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.3.0.RELEASE'
	// https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api
	compile group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}


docker {
	
	name "${project.name}"
	tag 'DockerHub', "hashanr/microservices:${project.version}"
	dockerfile file('src/docker/Dockerfile')
	copySpec.from(jar).rename(".*","app.jar")
	buildArgs(['JAR_FILE': "app.jar"])
}
